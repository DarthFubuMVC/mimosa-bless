"use strict";
var blesser, config, registerCommand, registration;

config = require('./config');

blesser = require('./blesser');

registration = function(mimosaConfig, register) {
  register(['preClean'], 'init', blesser.cleanBlessed);
  register(['add', 'update', 'remove'], 'afterWrite', blesser.checkForBless);
  return register(['postBuild'], 'init', blesser.blessAll);
};

registerCommand = function(program, retrieveConfig) {
  return program.command('bless').description('invokes bless compiler using config settings').action(function() {
    return blesser.blessCommand(retrieveConfig);
  });
};

module.exports = {
  registration: registration,
  defaults: config.defaults,
  placeholder: config.placeholder,
  validate: config.validate,
  registerCommand: registerCommand
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYzpcXGhvbWVcXGdpdGh1YlxcbWltb3NhLWJsZXNzXFxsaWJcXGluZGV4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYzpcXGhvbWVcXGdpdGh1YlxcbWltb3NhLWJsZXNzXFxzcmNcXGluZGV4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFBLENBQUE7QUFBQSxJQUFBLDhDQUFBOztBQUFBLE1BRUEsR0FBUyxPQUFBLENBQVEsVUFBUixDQUZULENBQUE7O0FBQUEsT0FHQSxHQUFVLE9BQUEsQ0FBUSxXQUFSLENBSFYsQ0FBQTs7QUFBQSxZQUtBLEdBQWUsU0FBQyxZQUFELEVBQWUsUUFBZixHQUFBO0FBQ2IsRUFBQSxRQUFBLENBQVMsQ0FBQyxVQUFELENBQVQsRUFBdUIsTUFBdkIsRUFBK0IsT0FBTyxDQUFDLFlBQXZDLENBQUEsQ0FBQTtBQUFBLEVBQ0EsUUFBQSxDQUFTLENBQUMsS0FBRCxFQUFRLFFBQVIsRUFBa0IsUUFBbEIsQ0FBVCxFQUFzQyxZQUF0QyxFQUFvRCxPQUFPLENBQUMsYUFBNUQsQ0FEQSxDQUFBO1NBRUEsUUFBQSxDQUFTLENBQUMsV0FBRCxDQUFULEVBQXdCLE1BQXhCLEVBQWdDLE9BQU8sQ0FBQyxRQUF4QyxFQUhhO0FBQUEsQ0FMZixDQUFBOztBQUFBLGVBVUEsR0FBa0IsU0FBQyxPQUFELEVBQVUsY0FBVixHQUFBO1NBQ2hCLE9BQ0UsQ0FBQyxPQURILENBQ1csT0FEWCxDQUVFLENBQUMsV0FGSCxDQUVlLDhDQUZmLENBR0UsQ0FBQyxNQUhILENBR1UsU0FBQSxHQUFBO1dBQ04sT0FBTyxDQUFDLFlBQVIsQ0FBcUIsY0FBckIsRUFETTtFQUFBLENBSFYsRUFEZ0I7QUFBQSxDQVZsQixDQUFBOztBQUFBLE1BaUJNLENBQUMsT0FBUCxHQUNFO0FBQUEsRUFBQSxZQUFBLEVBQWlCLFlBQWpCO0FBQUEsRUFDQSxRQUFBLEVBQWlCLE1BQU0sQ0FBQyxRQUR4QjtBQUFBLEVBRUEsV0FBQSxFQUFpQixNQUFNLENBQUMsV0FGeEI7QUFBQSxFQUdBLFFBQUEsRUFBaUIsTUFBTSxDQUFDLFFBSHhCO0FBQUEsRUFJQSxlQUFBLEVBQWlCLGVBSmpCO0NBbEJGLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIlxuXG5jb25maWcgPSByZXF1aXJlICcuL2NvbmZpZydcbmJsZXNzZXIgPSByZXF1aXJlICcuL2JsZXNzZXInXG5cbnJlZ2lzdHJhdGlvbiA9IChtaW1vc2FDb25maWcsIHJlZ2lzdGVyKSAtPlxuICByZWdpc3RlciBbJ3ByZUNsZWFuJ10sICdpbml0JywgYmxlc3Nlci5jbGVhbkJsZXNzZWRcbiAgcmVnaXN0ZXIgWydhZGQnLCAndXBkYXRlJywgJ3JlbW92ZSddLCAnYWZ0ZXJXcml0ZScsIGJsZXNzZXIuY2hlY2tGb3JCbGVzc1xuICByZWdpc3RlciBbJ3Bvc3RCdWlsZCddLCAnaW5pdCcsIGJsZXNzZXIuYmxlc3NBbGxcblxucmVnaXN0ZXJDb21tYW5kID0gKHByb2dyYW0sIHJldHJpZXZlQ29uZmlnKSAtPlxuICBwcm9ncmFtXG4gICAgLmNvbW1hbmQoJ2JsZXNzJylcbiAgICAuZGVzY3JpcHRpb24oJ2ludm9rZXMgYmxlc3MgY29tcGlsZXIgdXNpbmcgY29uZmlnIHNldHRpbmdzJylcbiAgICAuYWN0aW9uICgpIC0+XG4gICAgICBibGVzc2VyLmJsZXNzQ29tbWFuZCByZXRyaWV2ZUNvbmZpZ1xuXG5tb2R1bGUuZXhwb3J0cyA9XG4gIHJlZ2lzdHJhdGlvbjogICAgcmVnaXN0cmF0aW9uXG4gIGRlZmF1bHRzOiAgICAgICAgY29uZmlnLmRlZmF1bHRzXG4gIHBsYWNlaG9sZGVyOiAgICAgY29uZmlnLnBsYWNlaG9sZGVyXG4gIHZhbGlkYXRlOiAgICAgICAgY29uZmlnLnZhbGlkYXRlXG4gIHJlZ2lzdGVyQ29tbWFuZDogcmVnaXN0ZXJDb21tYW5kXG4iXX0=
